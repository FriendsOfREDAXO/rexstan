{
    "name": "sqlftw/sqlftw",
    "type": "library",
    "description": "Complete MySQL SQL dialect lexer, parser, AST and SQL serialisation",
    "homepage": "https://github.com/sqlftw/sqlftw",
    "license": ["proprietary"],
    "authors": [
        {
            "name": "Vlasta Neubauer",
            "homepage": "https://paranoiq.cz"
        }
    ],
    "require": {
        "php": "^7.4|^8.0",
        "dogma/dogma": "0.2.17"
    },
    "require-dev": {
        "dogma/dogma-dev": "0.1.29",
        "phpstan/phpstan": "1.9.15",
        "phpstan/phpstan-strict-rules": "^1.0",
        "amphp/parallel-functions": "1.1.0",
        "rector/rector": "0.14.8",
        "dogma/dogma-debug": "0.1"
    },
    "autoload": {
        "classmap": ["sources"]
    },
    "autoload-dev": {
        "classmap": ["tests", "build"]
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "scripts": {
        "da": "composer dump-autoload",
        "ag": "@build:doc",
        "b": "@build:init",
        "c": "@check:all",
        "cf": "@check:fast",
        "r": "@build:rector",
        "t": "@tests:run",
        "tm": "@tests:mysql",
        "tms": "@tests:mysql-s",
        "tc": "@tests:coverage",
        "ps": "@phpstan:run",
        "sc": "@spell:check",
        "cs": [
            "@phpcs:src",
            "@phpcs:tests"
        ],
        "csf": "@phpcs:fix",

        "build:init": [
            "composer install",
            "php -r \"@mkdir('log', 0777, true);\"",
            "php -r \"@mkdir('temp/cache', 0777, true);\"",
            "rm -rf temp/cache/*"
        ],
        "build:doc": "php81 ../../tools/apigen/bin/apigen sources --output doc/api",
        "build:rector": "php74 vendor/bin/rector process --dry-run",
        "build:rector-write": "php74 vendor/bin/rector process",

        "check:fast": [
            "@tests:run",
            "@phpstan:run",
            "@lint:php",
            "@phpcs:src",
            "@phpcs:tests",
            "@spell:check"
        ],
        "check:all": [
            "@tests:all",
            "@phpstan:all",
            "@lint:php-all",
            "@phpcs:src",
            "@phpcs:tests",
            "@spell:check"
        ],

        "tests:run": "php vendor/nette/tester/src/tester -C --colors 1 tests/Parser tests/Resolver",
        "tests:all": [
            "php82 vendor/nette/tester/src/tester -C --colors 1 tests/Parser tests/Resolver",
            "php81 vendor/nette/tester/src/tester -C --colors 1 tests/Parser tests/Resolver",
            "php80 vendor/nette/tester/src/tester -C --colors 1 tests/Parser tests/Resolver",
            "php74 vendor/nette/tester/src/tester -C --colors 1 tests/Parser tests/Resolver"
        ],
        "tests:coverage": "php vendor/nette/tester/src/tester tests -c tests --colors 1 -p phpdbg --coverage tests/coverage.html --coverage-src sources",
        "tests:mysql": "php tests/Mysql/test.php",
        "tests:mysql-s": "php tests/Mysql/test.php --single",

        "phpstan:run": "php vendor/phpstan/phpstan/phpstan analyse -c build/phpstan/phpstan.neon --memory-limit=512M",
        "phpstan:all": [
            "php82 vendor/phpstan/phpstan/phpstan analyse -c build/phpstan/phpstan.neon --memory-limit=512M",
            "php81 vendor/phpstan/phpstan/phpstan analyse -c build/phpstan/phpstan.neon --memory-limit=512M",
            "php80 vendor/phpstan/phpstan/phpstan analyse -c build/phpstan/phpstan.neon --memory-limit=512M",
            "php74 vendor/phpstan/phpstan/phpstan analyse -c build/phpstan/phpstan.neon --memory-limit=512M"
        ],

        "phpcs:all": [
            "@phpcs:src",
            "@phpcs:tests"
        ],
        "phpcs:src": "php vendor/squizlabs/php_codesniffer/bin/phpcs --standard=build/CodeSniffer/ruleset.xml --extensions=php --encoding=utf-8 --tab-width=4 -sp sources",
        "phpcs:tests": "php vendor/squizlabs/php_codesniffer/bin/phpcs --standard=build/CodeSniffer/ruleset-tests.xml --extensions=php,phpt --encoding=utf-8 --tab-width=4 -sp tests",
        "phpcs:fix": "php vendor/squizlabs/php_codesniffer/bin/phpcbf --standard=build/CodeSniffer/ruleset-tests.xml --extensions=php,phpt --encoding=utf-8 --tab-width=4 sources tests",

        "spell:check": "php vendor/spell-checker/spell-checker/spell-checker -c build/spell-checker/spell-checker.neon --checkDictionaryFiles --memoryLimit 1024M --noLogo",

        "lint:php": "php vendor/php-parallel-lint/php-parallel-lint/parallel-lint sources tests",
        "lint:php-all": [
            "php82 vendor/php-parallel-lint/php-parallel-lint/parallel-lint sources tests",
            "php81 vendor/php-parallel-lint/php-parallel-lint/parallel-lint sources tests",
            "php80 vendor/php-parallel-lint/php-parallel-lint/parallel-lint sources tests",
            "php74 vendor/php-parallel-lint/php-parallel-lint/parallel-lint sources tests"
        ]
    },
    "scripts-descriptions": {
        "ag": "\u001B[0;33m⭐Run ApiGen documentation generator (shortcut)\u001B[0m",
        "b": "\u001B[0;33m⭐Run build script (shortcut)\u001B[0m",
        "c": "\u001B[0;33m⭐Run all checks (shortcut)\u001B[0m",
        "cf": "\u001B[0;33m⭐Run fast checks (shortcut)\u001B[0m",
        "cs": "\u001B[0;33m⭐Run CS check\u001B[0m",
        "csf": "\u001B[0;33m⭐Run CS check with fix\u001B[0m",
        "da": "\u001B[0;33m⭐Dump autoloader (shortcut)\u001B[0m",
        "ps": "\u001B[0;33m⭐Run PHPStan check (shortcut)\u001B[0m",
        "r": "\u001B[0;33m⭐Run Rector in preview mode (shortcut)\u001B[0m",
        "t": "\u001B[0;33m⭐Run unit tests (shortcut)\u001B[0m",
        "tc": "\u001B[0;33m⭐Run unit tests with code coverage (shortcut)\u001B[0m",
        "tm": "\u001B[0;33m⭐Run MySQL tests (shortcut)\u001B[0m",
        "tms": "\u001B[0;33m⭐Run MySQL tests - single thread (shortcut)\u001B[0m",
        "build:init": "\u001B[0;33m⭐Run build script (composer, directories etc.)\u001B[0m",
        "build:doc": "\u001B[0;33m⭐Run ApiGen documentation generator\u001B[0m",
        "build:rector": "\u001B[0;33m⭐Run Rector in preview mode\u001B[0m",
        "build:rector-write": "\u001B[0;33m⭐Run Rector in write mode\u001B[0m",
        "check:fast": "\u001B[0;33m⭐Run all checks (unit tests, phpstan, phpcs, phplint, spell-check)\u001B[0m",
        "check:all": "\u001B[0;33m⭐Run all checks on all supported PHP versions (7.4 - 8.2)\u001B[0m",
        "tests:run": "\u001B[0;33m⭐Run unit tests\u001B[0m",
        "tests:all": "\u001B[0;33m⭐Run unit tests on all supported PHP versions (7.4 - 8.2)\u001B[0m",
        "tests:coverage": "\u001B[0;33m⭐Run unit tests with code coverage\u001B[0m",
        "tests:mysql": "\u001B[0;33m⭐Run MySQL tests\u001B[0m",
        "tests:mysql-s": "\u001B[0;33m⭐Run MySQL tests - single thread\u001B[0m",
        "phpstan:run": "\u001B[0;33m⭐Run PHPStan check\u001B[0m",
        "phpstan:all": "\u001B[0;33m⭐Run PHPStan check on all supported PHP versions (7.4 - 8.2)\u001B[0m",
        "phpcs:all": "\u001B[0;33m⭐Run CS check on /src and /tests\u001B[0m",
        "phpcs:src": "\u001B[0;33m⭐Run CS check on /src\u001B[0m",
        "phpcs:tests": "\u001B[0;33m⭐Run CS check on /tests\u001B[0m",
        "phpcs:fix": "\u001B[0;33m⭐Run CS check with auto-fixing on /src and /tests\u001B[0m",
        "spell:check": "\u001B[0;33m⭐Run spell-checker\u001B[0m",
        "lint:php": "\u001B[0;33m⭐Run PHPLint\u001B[0m",
        "lint:php-all": "\u001B[0;33m⭐Run PHPLint on all supported PHP versions (7.4 - 8.2)\u001B[0m"
    },
    "config": {
        "allow-plugins": {
            "dealerdirect/phpcodesniffer-composer-installer": false,
            "sllh/composer-versions-check": false
        }
    }
}
