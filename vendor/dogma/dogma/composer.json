{
    "name": "dogma/dogma",
    "type": "library",
    "description": "The incomplete standard library",
    "homepage": "http://github.com/paranoiq/dogma",
    "license": ["BSD-3-Clause"],
    "authors": [
        {
            "name": "Vlasta Neubauer",
            "homepage": "https://paranoiq.cz"
        }
    ],
    "require": {
        "php": "^7.2|^8.0",
        "ext-calendar":"*",
        "nette/http": "~2.4|~3.0",
        "nette/utils": "~2.4|~3.0"
    },
    "require-dev": {
        "dogma/dogma-dev": "0.1.29",
        "phpstan/phpstan": "1.8.2"
    },
    "suggest": {
        "ext-dom": "for Dom (basic functionality)",
        "ext-mbstring": "for Str (basic functionality)",
        "ext-intl": "for Str and Language (advanced unicode manipulation)",
        "ext-iconv": "for Str (converting encoding when ext-mbstring is not available)",
        "ext-recode": "for Str (converting encoding when ext-mbstring and ext-iconv are not available)",
        "ext-fileinfo": "for Io (content type and encoding detection)",
        "symfony/polyfill-intl-icu": "for Str and Language",
        "symfony/polyfill-intl-normalizer": "for Str",
        "symfony/polyfill-mbstring": "for Str"
    },
    "extra": {
        "branch-alias": {
            "dev-master": "0.2-dev"
        }
    },
    "autoload": {
        "classmap": ["src", "tests"]
    },
    "scripts": {
        "da": "composer dump-autoload",
        "c": "@check:fast",
        "ca": "@check:all",
        "t": "@tests:run",
        "tc": "@tests:coverage",
        "cs": "@phpcs:all",
        "csf": "@phpcs:fix",

        "build:run": [
            "composer install",
            "php -r \"@mkdir('log', 0777, true);\"",
            "php -r \"@mkdir('temp/cache', 0777, true);\"",
            "rm -rf temp/cache/*"
        ],
        "check:fast": [
            "@tests:run",
            "@phpstan:run",
            "@lint:php",
            "@spell:check",
            "@phpcs:src-fast",
            "@phpcs:tests-fast"
        ],
        "check:all": [
            "@tests:all",
            "@phpstan:all",
            "@lint:php-all",
            "@spell:check",
            "@phpcs:src-fast",
            "@phpcs:tests-fast"
        ],

        "tests:run": "php vendor/nette/tester/src/tester tests -c tests --colors 1",
        "tests:all": [
            "php82 vendor/nette/tester/src/tester tests -c tests --colors 1",
            "php81 vendor/nette/tester/src/tester tests -c tests --colors 1",
            "php80 vendor/nette/tester/src/tester tests -c tests --colors 1",
            "php74 vendor/nette/tester/src/tester tests -c tests --colors 1",
            "php73 vendor/nette/tester/src/tester tests -c tests --colors 1",
            "php72 vendor/nette/tester/src/tester tests -c tests --colors 1"
        ],
        "tests:coverage": "php vendor/nette/tester/src/tester tests -c tests --colors 1 -p phpdbg --coverage tests/coverage.html --coverage-src src",

        "phpstan:run": "php vendor/phpstan/phpstan/phpstan analyse --memory-limit 256M -c build/phpstan.neon",
        "phpstan:all": [
            "php82 vendor/phpstan/phpstan/phpstan analyse --memory-limit 256M -c build/phpstan.neon",
            "php81 vendor/phpstan/phpstan/phpstan analyse --memory-limit 256M -c build/phpstan.neon",
            "php80 vendor/phpstan/phpstan/phpstan analyse --memory-limit 256M -c build/phpstan.neon",
            "php74 vendor/phpstan/phpstan/phpstan analyse --memory-limit 256M -c build/phpstan.neon",
            "php73 vendor/phpstan/phpstan/phpstan analyse --memory-limit 256M -c build/phpstan.neon",
            "php72 vendor/phpstan/phpstan/phpstan analyse --memory-limit 256M -c build/phpstan.neon"
        ],

        "lint:php": "php vendor/php-parallel-lint/php-parallel-lint/parallel-lint src tests",
        "lint:php-all": [
            "php82 vendor/php-parallel-lint/php-parallel-lint/parallel-lint src tests",
            "php81 vendor/php-parallel-lint/php-parallel-lint/parallel-lint src tests",
            "php80 vendor/php-parallel-lint/php-parallel-lint/parallel-lint src tests",
            "php74 vendor/php-parallel-lint/php-parallel-lint/parallel-lint src tests",
            "php73 vendor/php-parallel-lint/php-parallel-lint/parallel-lint src tests",
            "php72 vendor/php-parallel-lint/php-parallel-lint/parallel-lint src tests"
        ],

        "phpcs:all": [
            "Composer\\Config::disableProcessTimeout",
            "@phpcs:src",
            "@phpcs:tests"
        ],
        "phpcs:src": "php vendor/squizlabs/php_codesniffer/bin/phpcs --standard=vendor/dogma/dogma-dev/src/CodeSniffer/ruleset.xml -sp src",
        "phpcs:src-fast": [
            "@modified-php-src",
            "php vendor/squizlabs/php_codesniffer/bin/phpcs --standard=vendor/dogma/dogma-dev/src/CodeSniffer/ruleset.xml --file-list=temp/modified-php-src.txt -sp"
        ],
        "phpcs:tests": "php vendor/squizlabs/php_codesniffer/bin/phpcs --standard=vendor/dogma/dogma-dev/src/CodeSniffer/ruleset-tests.xml -sp tests",
        "phpcs:tests-fast": [
            "@modified-php-tests",
            "php vendor/squizlabs/php_codesniffer/bin/phpcs --standard=vendor/dogma/dogma-dev/src/CodeSniffer/ruleset-tests.xml --file-list=temp/modified-php-tests.txt -sp"
        ],
        "phpcs:fix": "php vendor/squizlabs/php_codesniffer/bin/phpcbf --standard=vendor/dogma/dogma-dev/src/CodeSniffer/ruleset-tests.xml -sp src tests",

        "spell:check": "php vendor/spell-checker/spell-checker/spell-checker -c build/spell-checker.neon --checkDictionaryFiles --memoryLimit 1024M --noLogo",

        "require:check": "php vendor/maglnet/composer-require-checker/bin/composer-require-checker.php check",

        "modified-php-src": "chmod 777 temp && git diff-index --name-only --diff-filter=ACMR origin/master | grep \"^src.*\\.php$\" > temp/modified-php-src.txt || echo src/loader.php > temp/modified-php-src.txt",
        "modified-php-tests": "chmod 777 temp && git diff-index --name-only --diff-filter=ACMR origin/master | grep \"^tests.*\\.php$\" > temp/modified-php-tests.txt || echo tests/src/bootstrap.php > temp/modified-php-tests.txt"
    },
    "scripts-descriptions": {
        "da": "\u001B[0;33mShortcut for dump-autoloader\u001B[0m",
        "c": "\u001B[0;33mShortcut for check:fast\u001B[0m",
        "ca": "\u001B[0;33mShortcut for check:all\u001B[0m",
        "cs": "\u001B[0;33mShortcut for phpcs:all\u001B[0m",
        "csf": "\u001B[0;33mShortcut for phpcs:fix\u001B[0m",
        "t": "\u001B[0;33mShortcut for tests:run\u001B[0m",
        "tc": "\u001B[0;33mShortcut for tests:coverage\u001B[0m",

        "build:run": "Run build script",
        "check:fast": "Run all checks (tests, phpstan, phpcs, phplint, spell-check)",
        "check:all": "Run all checks on all supported PHP versions (7.2 - 8.2)",
        "tests:run": "Run tests",
        "tests:all": "Run tests on all supported PHP versions (7.2 - 8.2)",
        "tests:coverage": "Run tests with code coverage",
        "phpstan:run": "Run PHPStan check",
        "phpstan:all": "Run PHPStan check on all supported PHP versions (7.2 - 8.2)",
        "phpcs:all": "Run CS check on all code",
        "phpcs:src": "Run CS check on /src",
        "phpcs:src-fast": "Run fast CS check on /src",
        "phpcs:tests": "Run CS check on /tests",
        "phpcs:tests-fast": "Run fast CS check on /tests",
        "phpcs:fix": "Run CS check with auto-fixing on /src and /tests",
        "spell:check": "Run spell-checker",
        "lint:php": "Run PHPLint",
        "lint:php-all": "Run PHPLint on all supported PHP versions (7.2 - 8.2)"
    },
    "config": {
        "allow-plugins": {
            "dealerdirect/phpcodesniffer-composer-installer": false,
            "sllh/composer-versions-check": true
        }
    }
}
